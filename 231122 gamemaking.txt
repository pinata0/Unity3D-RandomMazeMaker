무작위적인 구조를 가진 미로를 생성하기 위해 Recursive backtracking algorithm을 사용하였고 Unity를 기반으로 게임을 제작하였다. 미로 곳곳에 생성되어 있는 코인들은 미로에서 벽이 생성되는 좌표가 공간좌표계 상에서 격자점에 해당하는 것을 이용하여 생성된 미로가 점유하고 있는 공간 중 격자점이 아닌 점에 해당하는 구역에 무작위적으로 생성되도록 설정하였다. 네트워크 서버는 Unity에서 제공하는 기본적인 3D 공간에 포함되어 있지 않기 때문에 Unity Asset중 하나인 Socket.IO를 사용하여 네트워크 서버를 제작하였다. 서버는 자바스크립트를 기반으로 코드를 작성하여 구현하였고 작성한 서버 코드와 Unity로 구현한 게임 코드를 Socket 통신으로 연결하여 네트워크 시스템을 구축하였다. 또한 뒤끝(Backnd) 서버를 활용하여 랭킹 시스템을 구현해 플레이어간 점수를 비교하여 보여주는 시스템을 구현하였다. 게임성을 부여하기 위한 사용자 인터페이스 설계 구현 과정에서 서버에 접속한 클라이언트의 입장에서 게임 화면에 미로의 전체 구조가 미니맵을 통해서만 보여지도록 하였고 코인을 획득하면 미니맵 상단에 코인을 획득한 개수가 표시된다. 코인을 다 모으면 게임 화면에 ‘Game Clear‘ 라는 문구와 함께 플레이어가 게임을 클리어하는 데 걸린 시간이 출력된다. 화면의 왼쪽 상단에는 게임 네트워크 서버에 접속한 플레이어들의 목록이 표시된다. Horror 맵의 경우에는 플레이어를 따라다니는 조명을 배치하여 미니맵 상에서 플레이어 주변만 밝게 보이도록 하였고 플레이어가 유령에 닿으면 게임이 종료되면서 ’Game Over’ 문구가 화면에 출력된다.
